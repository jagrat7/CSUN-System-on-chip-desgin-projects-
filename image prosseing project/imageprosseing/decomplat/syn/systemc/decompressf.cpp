// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "decompressf.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic decompressf::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic decompressf::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> decompressf::ap_ST_fsm_state1 = "1";
const sc_lv<7> decompressf::ap_ST_fsm_state2 = "10";
const sc_lv<7> decompressf::ap_ST_fsm_state3 = "100";
const sc_lv<7> decompressf::ap_ST_fsm_state4 = "1000";
const sc_lv<7> decompressf::ap_ST_fsm_state5 = "10000";
const sc_lv<7> decompressf::ap_ST_fsm_state6 = "100000";
const sc_lv<7> decompressf::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> decompressf::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> decompressf::ap_const_lv32_1 = "1";
const sc_lv<1> decompressf::ap_const_lv1_1 = "1";
const sc_lv<32> decompressf::ap_const_lv32_2 = "10";
const sc_lv<32> decompressf::ap_const_lv32_3 = "11";
const sc_lv<1> decompressf::ap_const_lv1_0 = "0";
const sc_lv<32> decompressf::ap_const_lv32_4 = "100";
const sc_lv<32> decompressf::ap_const_lv32_5 = "101";
const sc_lv<31> decompressf::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<5> decompressf::ap_const_lv5_0 = "00000";
const sc_lv<10> decompressf::ap_const_lv10_0 = "0000000000";
const sc_lv<32> decompressf::ap_const_lv32_6 = "110";
const sc_lv<32> decompressf::ap_const_lv32_271 = "1001110001";
const sc_lv<31> decompressf::ap_const_lv31_1 = "1";
const sc_lv<10> decompressf::ap_const_lv10_19 = "11001";
const sc_lv<5> decompressf::ap_const_lv5_19 = "11001";
const sc_lv<5> decompressf::ap_const_lv5_1 = "1";
const sc_lv<5> decompressf::ap_const_lv5_18 = "11000";
const bool decompressf::ap_const_boolean_1 = true;

decompressf::decompressf(sc_module_name name) : sc_module(name), mVcdFile(0) {
    unr1d_U = new decompressf_unr1d("unr1d_U");
    unr1d_U->clk(ap_clk);
    unr1d_U->reset(ap_rst);
    unr1d_U->address0(unr1d_address0);
    unr1d_U->ce0(unr1d_ce0);
    unr1d_U->we0(unr1d_we0);
    unr1d_U->d0(c_load_1_reg_415);
    unr1d_U->q0(unr1d_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln291_fu_295_p2);
    sensitive << ( j_1_reg_146 );

    SC_METHOD(thread_add_ln303_1_fu_381_p2);
    sensitive << ( phi_mul1_reg_202 );
    sensitive << ( zext_ln303_1_fu_377_p1 );

    SC_METHOD(thread_add_ln303_2_fu_307_p2);
    sensitive << ( phi_mul1_reg_202 );

    SC_METHOD(thread_add_ln303_3_fu_313_p2);
    sensitive << ( phi_mul_reg_190 );

    SC_METHOD(thread_add_ln303_fu_353_p2);
    sensitive << ( phi_mul_reg_190 );
    sensitive << ( zext_ln300_fu_337_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln298_fu_319_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln298_fu_319_p2 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sext_ln286_fu_237_p1 );

    SC_METHOD(thread_c_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sext_ln289_fu_242_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_c_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_dc_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln303_2_fu_393_p1 );

    SC_METHOD(thread_dc_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_dc_d0);
    sensitive << ( unr1d_q0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_dc_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_empty_fu_251_p2);
    sensitive << ( c_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_h_fu_301_p2);
    sensitive << ( h_0_reg_134 );

    SC_METHOD(thread_i_fu_325_p2);
    sensitive << ( i_0_reg_179 );

    SC_METHOD(thread_icmp_ln283_fu_225_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_reg_122 );

    SC_METHOD(thread_icmp_ln286_fu_279_p2);
    sensitive << ( c_load_reg_410 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln286_fu_275_p1 );

    SC_METHOD(thread_icmp_ln298_fu_319_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_reg_179 );

    SC_METHOD(thread_icmp_ln300_fu_341_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_2_reg_214 );

    SC_METHOD(thread_icmp_ln303_fu_331_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln298_fu_319_p2 );
    sensitive << ( x_0_reg_167 );

    SC_METHOD(thread_j_3_fu_269_p2);
    sensitive << ( j_0_reg_122 );
    sensitive << ( smax_cast_fu_265_p1 );

    SC_METHOD(thread_j_fu_347_p2);
    sensitive << ( j_2_reg_214 );

    SC_METHOD(thread_k_fu_284_p2);
    sensitive << ( k_0_reg_156 );

    SC_METHOD(thread_or_ln286_fu_231_p2);
    sensitive << ( h_0_reg_134 );

    SC_METHOD(thread_select_ln303_fu_370_p3);
    sensitive << ( icmp_ln303_reg_461 );
    sensitive << ( j_2_reg_214 );
    sensitive << ( sub_ln303_fu_364_p2 );

    SC_METHOD(thread_sext_ln286_fu_237_p1);
    sensitive << ( or_ln286_fu_231_p2 );

    SC_METHOD(thread_sext_ln289_1_fu_290_p1);
    sensitive << ( j_1_reg_146 );

    SC_METHOD(thread_sext_ln289_fu_242_p1);
    sensitive << ( h_0_reg_134 );

    SC_METHOD(thread_smax_cast_fu_265_p1);
    sensitive << ( smax_fu_257_p3 );

    SC_METHOD(thread_smax_fu_257_p3);
    sensitive << ( empty_fu_251_p2 );
    sensitive << ( trunc_ln289_fu_247_p1 );

    SC_METHOD(thread_sub_ln303_fu_364_p2);
    sensitive << ( j_2_reg_214 );

    SC_METHOD(thread_trunc_ln289_fu_247_p1);
    sensitive << ( c_q0 );

    SC_METHOD(thread_unr1d_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln289_1_fu_290_p1 );
    sensitive << ( zext_ln303_fu_359_p1 );

    SC_METHOD(thread_unr1d_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_unr1d_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln286_fu_279_p2 );

    SC_METHOD(thread_x_fu_387_p2);
    sensitive << ( x_0_reg_167 );

    SC_METHOD(thread_zext_ln286_fu_275_p1);
    sensitive << ( k_0_reg_156 );

    SC_METHOD(thread_zext_ln300_fu_337_p1);
    sensitive << ( j_2_reg_214 );

    SC_METHOD(thread_zext_ln303_1_fu_377_p1);
    sensitive << ( select_ln303_fu_370_p3 );

    SC_METHOD(thread_zext_ln303_2_fu_393_p1);
    sensitive << ( add_ln303_1_reg_479 );

    SC_METHOD(thread_zext_ln303_fu_359_p1);
    sensitive << ( add_ln303_fu_353_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln283_fu_225_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln286_fu_279_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln298_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln300_fu_341_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "decompressf_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, c_address0, "(port)c_address0");
    sc_trace(mVcdFile, c_ce0, "(port)c_ce0");
    sc_trace(mVcdFile, c_q0, "(port)c_q0");
    sc_trace(mVcdFile, c_address1, "(port)c_address1");
    sc_trace(mVcdFile, c_ce1, "(port)c_ce1");
    sc_trace(mVcdFile, c_q1, "(port)c_q1");
    sc_trace(mVcdFile, dc_address0, "(port)dc_address0");
    sc_trace(mVcdFile, dc_ce0, "(port)dc_ce0");
    sc_trace(mVcdFile, dc_we0, "(port)dc_we0");
    sc_trace(mVcdFile, dc_d0, "(port)dc_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln283_fu_225_p2, "icmp_ln283_fu_225_p2");
    sc_trace(mVcdFile, c_load_reg_410, "c_load_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, c_load_1_reg_415, "c_load_1_reg_415");
    sc_trace(mVcdFile, j_3_fu_269_p2, "j_3_fu_269_p2");
    sc_trace(mVcdFile, j_3_reg_420, "j_3_reg_420");
    sc_trace(mVcdFile, k_fu_284_p2, "k_fu_284_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln291_fu_295_p2, "add_ln291_fu_295_p2");
    sc_trace(mVcdFile, icmp_ln286_fu_279_p2, "icmp_ln286_fu_279_p2");
    sc_trace(mVcdFile, h_fu_301_p2, "h_fu_301_p2");
    sc_trace(mVcdFile, add_ln303_2_fu_307_p2, "add_ln303_2_fu_307_p2");
    sc_trace(mVcdFile, add_ln303_2_reg_443, "add_ln303_2_reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln303_3_fu_313_p2, "add_ln303_3_fu_313_p2");
    sc_trace(mVcdFile, add_ln303_3_reg_448, "add_ln303_3_reg_448");
    sc_trace(mVcdFile, i_fu_325_p2, "i_fu_325_p2");
    sc_trace(mVcdFile, i_reg_456, "i_reg_456");
    sc_trace(mVcdFile, icmp_ln303_fu_331_p2, "icmp_ln303_fu_331_p2");
    sc_trace(mVcdFile, icmp_ln303_reg_461, "icmp_ln303_reg_461");
    sc_trace(mVcdFile, icmp_ln298_fu_319_p2, "icmp_ln298_fu_319_p2");
    sc_trace(mVcdFile, j_fu_347_p2, "j_fu_347_p2");
    sc_trace(mVcdFile, j_reg_469, "j_reg_469");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln300_fu_341_p2, "icmp_ln300_fu_341_p2");
    sc_trace(mVcdFile, add_ln303_1_fu_381_p2, "add_ln303_1_fu_381_p2");
    sc_trace(mVcdFile, add_ln303_1_reg_479, "add_ln303_1_reg_479");
    sc_trace(mVcdFile, x_fu_387_p2, "x_fu_387_p2");
    sc_trace(mVcdFile, unr1d_address0, "unr1d_address0");
    sc_trace(mVcdFile, unr1d_ce0, "unr1d_ce0");
    sc_trace(mVcdFile, unr1d_we0, "unr1d_we0");
    sc_trace(mVcdFile, unr1d_q0, "unr1d_q0");
    sc_trace(mVcdFile, j_0_reg_122, "j_0_reg_122");
    sc_trace(mVcdFile, h_0_reg_134, "h_0_reg_134");
    sc_trace(mVcdFile, j_1_reg_146, "j_1_reg_146");
    sc_trace(mVcdFile, k_0_reg_156, "k_0_reg_156");
    sc_trace(mVcdFile, x_0_reg_167, "x_0_reg_167");
    sc_trace(mVcdFile, i_0_reg_179, "i_0_reg_179");
    sc_trace(mVcdFile, phi_mul_reg_190, "phi_mul_reg_190");
    sc_trace(mVcdFile, phi_mul1_reg_202, "phi_mul1_reg_202");
    sc_trace(mVcdFile, j_2_reg_214, "j_2_reg_214");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sext_ln286_fu_237_p1, "sext_ln286_fu_237_p1");
    sc_trace(mVcdFile, sext_ln289_fu_242_p1, "sext_ln289_fu_242_p1");
    sc_trace(mVcdFile, sext_ln289_1_fu_290_p1, "sext_ln289_1_fu_290_p1");
    sc_trace(mVcdFile, zext_ln303_fu_359_p1, "zext_ln303_fu_359_p1");
    sc_trace(mVcdFile, zext_ln303_2_fu_393_p1, "zext_ln303_2_fu_393_p1");
    sc_trace(mVcdFile, or_ln286_fu_231_p2, "or_ln286_fu_231_p2");
    sc_trace(mVcdFile, empty_fu_251_p2, "empty_fu_251_p2");
    sc_trace(mVcdFile, trunc_ln289_fu_247_p1, "trunc_ln289_fu_247_p1");
    sc_trace(mVcdFile, smax_fu_257_p3, "smax_fu_257_p3");
    sc_trace(mVcdFile, smax_cast_fu_265_p1, "smax_cast_fu_265_p1");
    sc_trace(mVcdFile, zext_ln286_fu_275_p1, "zext_ln286_fu_275_p1");
    sc_trace(mVcdFile, zext_ln300_fu_337_p1, "zext_ln300_fu_337_p1");
    sc_trace(mVcdFile, add_ln303_fu_353_p2, "add_ln303_fu_353_p2");
    sc_trace(mVcdFile, sub_ln303_fu_364_p2, "sub_ln303_fu_364_p2");
    sc_trace(mVcdFile, select_ln303_fu_370_p3, "select_ln303_fu_370_p3");
    sc_trace(mVcdFile, zext_ln303_1_fu_377_p1, "zext_ln303_1_fu_377_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("decompressf.hdltvin.dat");
    mHdltvoutHandle.open("decompressf.hdltvout.dat");
}

decompressf::~decompressf() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete unr1d_U;
}

void decompressf::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln286_fu_279_p2.read(), ap_const_lv1_0))) {
        h_0_reg_134 = h_fu_301_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        h_0_reg_134 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln283_fu_225_p2.read(), ap_const_lv1_0))) {
        i_0_reg_179 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln300_fu_341_p2.read()))) {
        i_0_reg_179 = i_reg_456.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln286_fu_279_p2.read(), ap_const_lv1_0))) {
        j_0_reg_122 = j_3_reg_420.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_122 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln286_fu_279_p2.read()))) {
        j_1_reg_146 = add_ln291_fu_295_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_146 = j_0_reg_122.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_2_reg_214 = j_reg_469.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln298_fu_319_p2.read()))) {
        j_2_reg_214 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln286_fu_279_p2.read()))) {
        k_0_reg_156 = k_fu_284_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_0_reg_156 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln283_fu_225_p2.read(), ap_const_lv1_0))) {
        phi_mul1_reg_202 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln300_fu_341_p2.read()))) {
        phi_mul1_reg_202 = add_ln303_2_reg_443.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln283_fu_225_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_190 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln300_fu_341_p2.read()))) {
        phi_mul_reg_190 = add_ln303_3_reg_448.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln283_fu_225_p2.read(), ap_const_lv1_0))) {
        x_0_reg_167 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln300_fu_341_p2.read()))) {
        x_0_reg_167 = x_fu_387_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln300_fu_341_p2.read()))) {
        add_ln303_1_reg_479 = add_ln303_1_fu_381_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln303_2_reg_443 = add_ln303_2_fu_307_p2.read();
        add_ln303_3_reg_448 = add_ln303_3_fu_313_p2.read();
        i_reg_456 = i_fu_325_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_load_1_reg_415 = c_q1.read();
        c_load_reg_410 = c_q0.read();
        j_3_reg_420 = j_3_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln298_fu_319_p2.read()))) {
        icmp_ln303_reg_461 = icmp_ln303_fu_331_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_reg_469 = j_fu_347_p2.read();
    }
}

void decompressf::thread_add_ln291_fu_295_p2() {
    add_ln291_fu_295_p2 = (!j_1_reg_146.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(j_1_reg_146.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void decompressf::thread_add_ln303_1_fu_381_p2() {
    add_ln303_1_fu_381_p2 = (!phi_mul1_reg_202.read().is_01() || !zext_ln303_1_fu_377_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul1_reg_202.read()) + sc_biguint<10>(zext_ln303_1_fu_377_p1.read()));
}

void decompressf::thread_add_ln303_2_fu_307_p2() {
    add_ln303_2_fu_307_p2 = (!phi_mul1_reg_202.read().is_01() || !ap_const_lv10_19.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul1_reg_202.read()) + sc_biguint<10>(ap_const_lv10_19));
}

void decompressf::thread_add_ln303_3_fu_313_p2() {
    add_ln303_3_fu_313_p2 = (!phi_mul_reg_190.read().is_01() || !ap_const_lv10_19.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_190.read()) + sc_biguint<10>(ap_const_lv10_19));
}

void decompressf::thread_add_ln303_fu_353_p2() {
    add_ln303_fu_353_p2 = (!zext_ln300_fu_337_p1.read().is_01() || !phi_mul_reg_190.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln300_fu_337_p1.read()) + sc_biguint<10>(phi_mul_reg_190.read()));
}

void decompressf::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void decompressf::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void decompressf::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void decompressf::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void decompressf::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void decompressf::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void decompressf::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void decompressf::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln298_fu_319_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void decompressf::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void decompressf::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln298_fu_319_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void decompressf::thread_c_address0() {
    c_address0 =  (sc_lv<10>) (sext_ln286_fu_237_p1.read());
}

void decompressf::thread_c_address1() {
    c_address1 =  (sc_lv<10>) (sext_ln289_fu_242_p1.read());
}

void decompressf::thread_c_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void decompressf::thread_c_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_ce1 = ap_const_logic_1;
    } else {
        c_ce1 = ap_const_logic_0;
    }
}

void decompressf::thread_dc_address0() {
    dc_address0 =  (sc_lv<10>) (zext_ln303_2_fu_393_p1.read());
}

void decompressf::thread_dc_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        dc_ce0 = ap_const_logic_1;
    } else {
        dc_ce0 = ap_const_logic_0;
    }
}

void decompressf::thread_dc_d0() {
    dc_d0 = unr1d_q0.read();
}

void decompressf::thread_dc_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        dc_we0 = ap_const_logic_1;
    } else {
        dc_we0 = ap_const_logic_0;
    }
}

void decompressf::thread_empty_fu_251_p2() {
    empty_fu_251_p2 = (!c_q0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(c_q0.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void decompressf::thread_h_fu_301_p2() {
    h_fu_301_p2 = (!h_0_reg_134.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<32>(): (sc_bigint<32>(h_0_reg_134.read()) + sc_biguint<32>(ap_const_lv32_2));
}

void decompressf::thread_i_fu_325_p2() {
    i_fu_325_p2 = (!i_0_reg_179.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_179.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void decompressf::thread_icmp_ln283_fu_225_p2() {
    icmp_ln283_fu_225_p2 = (!j_0_reg_122.read().is_01() || !ap_const_lv32_271.is_01())? sc_lv<1>(): (sc_bigint<32>(j_0_reg_122.read()) < sc_bigint<32>(ap_const_lv32_271));
}

void decompressf::thread_icmp_ln286_fu_279_p2() {
    icmp_ln286_fu_279_p2 = (!zext_ln286_fu_275_p1.read().is_01() || !c_load_reg_410.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln286_fu_275_p1.read()) < sc_bigint<32>(c_load_reg_410.read()));
}

void decompressf::thread_icmp_ln298_fu_319_p2() {
    icmp_ln298_fu_319_p2 = (!i_0_reg_179.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_179.read() == ap_const_lv5_19);
}

void decompressf::thread_icmp_ln300_fu_341_p2() {
    icmp_ln300_fu_341_p2 = (!j_2_reg_214.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_214.read() == ap_const_lv5_19);
}

void decompressf::thread_icmp_ln303_fu_331_p2() {
    icmp_ln303_fu_331_p2 = (!x_0_reg_167.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_167.read() == ap_const_lv32_0);
}

void decompressf::thread_j_3_fu_269_p2() {
    j_3_fu_269_p2 = (!smax_cast_fu_265_p1.read().is_01() || !j_0_reg_122.read().is_01())? sc_lv<32>(): (sc_biguint<32>(smax_cast_fu_265_p1.read()) + sc_biguint<32>(j_0_reg_122.read()));
}

void decompressf::thread_j_fu_347_p2() {
    j_fu_347_p2 = (!j_2_reg_214.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_2_reg_214.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void decompressf::thread_k_fu_284_p2() {
    k_fu_284_p2 = (!k_0_reg_156.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(k_0_reg_156.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void decompressf::thread_or_ln286_fu_231_p2() {
    or_ln286_fu_231_p2 = (h_0_reg_134.read() | ap_const_lv32_1);
}

void decompressf::thread_select_ln303_fu_370_p3() {
    select_ln303_fu_370_p3 = (!icmp_ln303_reg_461.read()[0].is_01())? sc_lv<5>(): ((icmp_ln303_reg_461.read()[0].to_bool())? j_2_reg_214.read(): sub_ln303_fu_364_p2.read());
}

void decompressf::thread_sext_ln286_fu_237_p1() {
    sext_ln286_fu_237_p1 = esl_sext<64,32>(or_ln286_fu_231_p2.read());
}

void decompressf::thread_sext_ln289_1_fu_290_p1() {
    sext_ln289_1_fu_290_p1 = esl_sext<64,32>(j_1_reg_146.read());
}

void decompressf::thread_sext_ln289_fu_242_p1() {
    sext_ln289_fu_242_p1 = esl_sext<64,32>(h_0_reg_134.read());
}

void decompressf::thread_smax_cast_fu_265_p1() {
    smax_cast_fu_265_p1 = esl_zext<32,31>(smax_fu_257_p3.read());
}

void decompressf::thread_smax_fu_257_p3() {
    smax_fu_257_p3 = (!empty_fu_251_p2.read()[0].is_01())? sc_lv<31>(): ((empty_fu_251_p2.read()[0].to_bool())? trunc_ln289_fu_247_p1.read(): ap_const_lv31_0);
}

void decompressf::thread_sub_ln303_fu_364_p2() {
    sub_ln303_fu_364_p2 = (!ap_const_lv5_18.is_01() || !j_2_reg_214.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_18) - sc_biguint<5>(j_2_reg_214.read()));
}

void decompressf::thread_trunc_ln289_fu_247_p1() {
    trunc_ln289_fu_247_p1 = c_q0.read().range(31-1, 0);
}

void decompressf::thread_unr1d_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        unr1d_address0 =  (sc_lv<10>) (zext_ln303_fu_359_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        unr1d_address0 =  (sc_lv<10>) (sext_ln289_1_fu_290_p1.read());
    } else {
        unr1d_address0 = "XXXXXXXXXX";
    }
}

void decompressf::thread_unr1d_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        unr1d_ce0 = ap_const_logic_1;
    } else {
        unr1d_ce0 = ap_const_logic_0;
    }
}

void decompressf::thread_unr1d_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln286_fu_279_p2.read()))) {
        unr1d_we0 = ap_const_logic_1;
    } else {
        unr1d_we0 = ap_const_logic_0;
    }
}

void decompressf::thread_x_fu_387_p2() {
    x_fu_387_p2 = (x_0_reg_167.read() ^ ap_const_lv32_1);
}

void decompressf::thread_zext_ln286_fu_275_p1() {
    zext_ln286_fu_275_p1 = esl_zext<32,31>(k_0_reg_156.read());
}

void decompressf::thread_zext_ln300_fu_337_p1() {
    zext_ln300_fu_337_p1 = esl_zext<10,5>(j_2_reg_214.read());
}

void decompressf::thread_zext_ln303_1_fu_377_p1() {
    zext_ln303_1_fu_377_p1 = esl_zext<10,5>(select_ln303_fu_370_p3.read());
}

void decompressf::thread_zext_ln303_2_fu_393_p1() {
    zext_ln303_2_fu_393_p1 = esl_zext<64,10>(add_ln303_1_reg_479.read());
}

void decompressf::thread_zext_ln303_fu_359_p1() {
    zext_ln303_fu_359_p1 = esl_zext<64,10>(add_ln303_fu_353_p2.read());
}

void decompressf::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln283_fu_225_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln286_fu_279_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln298_fu_319_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln300_fu_341_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void decompressf::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address0\" :  \"" << c_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce0\" :  \"" << c_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q0\" :  \"" << c_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address1\" :  \"" << c_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce1\" :  \"" << c_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q1\" :  \"" << c_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dc_address0\" :  \"" << dc_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dc_ce0\" :  \"" << dc_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dc_we0\" :  \"" << dc_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dc_d0\" :  \"" << dc_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

