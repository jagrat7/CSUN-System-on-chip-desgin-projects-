// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="decompressf,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.279000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=378,HLS_SYN_LUT=1635,HLS_VERSION=2019_1}" *)

module decompressf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_q0,
        c_address1,
        c_ce1,
        c_q1,
        dc_address0,
        dc_ce0,
        dc_we0,
        dc_d0
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] c_address0;
output   c_ce0;
input  [31:0] c_q0;
output  [9:0] c_address1;
output   c_ce1;
input  [31:0] c_q1;
output  [9:0] dc_address0;
output   dc_ce0;
output   dc_we0;
output  [31:0] dc_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg c_ce0;
reg c_ce1;
reg[9:0] dc_address0;
reg dc_ce0;
reg dc_we0;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln283_fu_613_p2;
reg   [31:0] c_load_reg_1455;
wire    ap_CS_fsm_state3;
reg   [31:0] c_load_1_reg_1460;
wire   [31:0] j_fu_657_p2;
reg   [31:0] j_reg_1465;
wire   [30:0] k_fu_672_p2;
wire    ap_CS_fsm_state4;
wire   [31:0] add_ln291_fu_683_p2;
wire   [0:0] icmp_ln286_fu_667_p2;
wire   [31:0] h_fu_689_p2;
wire   [4:0] i_fu_701_p2;
reg   [4:0] i_reg_1491;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln303_fu_707_p2;
reg   [0:0] icmp_ln303_reg_1496;
wire   [0:0] icmp_ln298_fu_695_p2;
wire   [31:0] x_fu_718_p2;
reg   [31:0] x_reg_1529;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire   [9:0] add_ln303_49_fu_1384_p2;
reg   [9:0] add_ln303_49_reg_1649;
wire    ap_CS_fsm_state29;
wire   [9:0] add_ln303_50_fu_1390_p2;
reg   [9:0] add_ln303_50_reg_1654;
wire   [9:0] add_ln303_48_fu_1432_p2;
reg   [9:0] add_ln303_48_reg_1664;
reg   [9:0] unr1d_address0;
reg    unr1d_ce0;
reg    unr1d_we0;
wire   [31:0] unr1d_q0;
reg   [31:0] j_0_reg_522;
reg  signed [31:0] h_0_reg_534;
reg  signed [31:0] j_1_reg_546;
reg   [30:0] k_0_reg_556;
reg   [31:0] x_0_reg_567;
wire    ap_CS_fsm_state30;
reg   [4:0] i_0_reg_578;
reg   [9:0] phi_mul_reg_589;
reg   [9:0] phi_mul1_reg_601;
wire  signed [63:0] sext_ln286_fu_625_p1;
wire  signed [63:0] sext_ln289_fu_630_p1;
wire  signed [63:0] sext_ln289_1_fu_678_p1;
wire   [63:0] zext_ln303_1_fu_713_p1;
wire   [63:0] zext_ln303_26_fu_737_p1;
wire   [63:0] zext_ln303_2_fu_748_p1;
wire   [63:0] zext_ln303_27_fu_766_p1;
wire   [63:0] zext_ln303_3_fu_777_p1;
wire   [63:0] zext_ln303_28_fu_795_p1;
wire   [63:0] zext_ln303_4_fu_806_p1;
wire   [63:0] zext_ln303_29_fu_824_p1;
wire   [63:0] zext_ln303_5_fu_835_p1;
wire   [63:0] zext_ln303_30_fu_853_p1;
wire   [63:0] zext_ln303_6_fu_864_p1;
wire   [63:0] zext_ln303_31_fu_882_p1;
wire   [63:0] zext_ln303_7_fu_893_p1;
wire   [63:0] zext_ln303_32_fu_911_p1;
wire   [63:0] zext_ln303_8_fu_922_p1;
wire   [63:0] zext_ln303_33_fu_940_p1;
wire   [63:0] zext_ln303_9_fu_951_p1;
wire   [63:0] zext_ln303_34_fu_969_p1;
wire   [63:0] zext_ln303_10_fu_980_p1;
wire   [63:0] zext_ln303_35_fu_998_p1;
wire   [63:0] zext_ln303_11_fu_1009_p1;
wire   [63:0] zext_ln303_36_fu_1027_p1;
wire   [63:0] zext_ln303_12_fu_1038_p1;
wire   [63:0] zext_ln303_37_fu_1056_p1;
wire   [63:0] zext_ln303_13_fu_1067_p1;
wire   [63:0] zext_ln303_fu_1078_p1;
wire   [63:0] zext_ln303_14_fu_1089_p1;
wire   [63:0] zext_ln303_38_fu_1107_p1;
wire   [63:0] zext_ln303_15_fu_1118_p1;
wire   [63:0] zext_ln303_39_fu_1136_p1;
wire   [63:0] zext_ln303_16_fu_1147_p1;
wire   [63:0] zext_ln303_40_fu_1165_p1;
wire   [63:0] zext_ln303_17_fu_1176_p1;
wire   [63:0] zext_ln303_41_fu_1194_p1;
wire   [63:0] zext_ln303_18_fu_1205_p1;
wire   [63:0] zext_ln303_42_fu_1223_p1;
wire   [63:0] zext_ln303_19_fu_1234_p1;
wire   [63:0] zext_ln303_43_fu_1252_p1;
wire   [63:0] zext_ln303_20_fu_1263_p1;
wire   [63:0] zext_ln303_44_fu_1281_p1;
wire   [63:0] zext_ln303_21_fu_1292_p1;
wire   [63:0] zext_ln303_45_fu_1310_p1;
wire   [63:0] zext_ln303_22_fu_1321_p1;
wire   [63:0] zext_ln303_46_fu_1339_p1;
wire   [63:0] zext_ln303_23_fu_1350_p1;
wire   [63:0] zext_ln303_47_fu_1368_p1;
wire   [63:0] zext_ln303_24_fu_1379_p1;
wire   [63:0] zext_ln303_48_fu_1409_p1;
wire   [63:0] zext_ln303_25_fu_1420_p1;
wire   [63:0] zext_ln303_49_fu_1438_p1;
wire   [31:0] or_ln286_fu_619_p2;
wire   [0:0] empty_fu_639_p2;
wire   [30:0] trunc_ln289_fu_635_p1;
wire   [30:0] smax_fu_645_p3;
wire   [31:0] smax_cast_fu_653_p1;
wire   [31:0] zext_ln286_fu_663_p1;
wire   [9:0] select_ln303_fu_724_p3;
wire   [9:0] add_ln303_25_fu_731_p2;
wire   [9:0] add_ln303_fu_742_p2;
wire   [9:0] select_ln303_1_fu_753_p3;
wire   [9:0] add_ln303_26_fu_760_p2;
wire   [9:0] add_ln303_1_fu_771_p2;
wire   [9:0] select_ln303_2_fu_782_p3;
wire   [9:0] add_ln303_27_fu_789_p2;
wire   [9:0] add_ln303_2_fu_800_p2;
wire   [9:0] select_ln303_3_fu_811_p3;
wire   [9:0] add_ln303_28_fu_818_p2;
wire   [9:0] add_ln303_3_fu_829_p2;
wire   [9:0] select_ln303_4_fu_840_p3;
wire   [9:0] add_ln303_29_fu_847_p2;
wire   [9:0] add_ln303_4_fu_858_p2;
wire   [9:0] select_ln303_5_fu_869_p3;
wire   [9:0] add_ln303_30_fu_876_p2;
wire   [9:0] add_ln303_5_fu_887_p2;
wire   [9:0] select_ln303_6_fu_898_p3;
wire   [9:0] add_ln303_31_fu_905_p2;
wire   [9:0] add_ln303_6_fu_916_p2;
wire   [9:0] select_ln303_7_fu_927_p3;
wire   [9:0] add_ln303_32_fu_934_p2;
wire   [9:0] add_ln303_7_fu_945_p2;
wire   [9:0] select_ln303_8_fu_956_p3;
wire   [9:0] add_ln303_33_fu_963_p2;
wire   [9:0] add_ln303_8_fu_974_p2;
wire   [9:0] select_ln303_9_fu_985_p3;
wire   [9:0] add_ln303_34_fu_992_p2;
wire   [9:0] add_ln303_9_fu_1003_p2;
wire   [9:0] select_ln303_10_fu_1014_p3;
wire   [9:0] add_ln303_35_fu_1021_p2;
wire   [9:0] add_ln303_10_fu_1032_p2;
wire   [9:0] select_ln303_11_fu_1043_p3;
wire   [9:0] add_ln303_36_fu_1050_p2;
wire   [9:0] add_ln303_11_fu_1061_p2;
wire   [9:0] add_ln303_24_fu_1072_p2;
wire   [9:0] add_ln303_12_fu_1083_p2;
wire   [9:0] select_ln303_12_fu_1094_p3;
wire   [9:0] add_ln303_37_fu_1101_p2;
wire   [9:0] add_ln303_13_fu_1112_p2;
wire   [9:0] select_ln303_13_fu_1123_p3;
wire   [9:0] add_ln303_38_fu_1130_p2;
wire   [9:0] add_ln303_14_fu_1141_p2;
wire   [9:0] select_ln303_14_fu_1152_p3;
wire   [9:0] add_ln303_39_fu_1159_p2;
wire   [9:0] add_ln303_15_fu_1170_p2;
wire   [9:0] select_ln303_15_fu_1181_p3;
wire   [9:0] add_ln303_40_fu_1188_p2;
wire   [9:0] add_ln303_16_fu_1199_p2;
wire   [9:0] select_ln303_16_fu_1210_p3;
wire   [9:0] add_ln303_41_fu_1217_p2;
wire   [9:0] add_ln303_17_fu_1228_p2;
wire   [9:0] select_ln303_17_fu_1239_p3;
wire   [9:0] add_ln303_42_fu_1246_p2;
wire   [9:0] add_ln303_18_fu_1257_p2;
wire   [9:0] select_ln303_18_fu_1268_p3;
wire   [9:0] add_ln303_43_fu_1275_p2;
wire   [9:0] add_ln303_19_fu_1286_p2;
wire   [9:0] select_ln303_19_fu_1297_p3;
wire   [9:0] add_ln303_44_fu_1304_p2;
wire   [9:0] add_ln303_20_fu_1315_p2;
wire   [9:0] select_ln303_20_fu_1326_p3;
wire   [9:0] add_ln303_45_fu_1333_p2;
wire   [9:0] add_ln303_21_fu_1344_p2;
wire   [9:0] select_ln303_21_fu_1355_p3;
wire   [9:0] add_ln303_46_fu_1362_p2;
wire   [9:0] add_ln303_22_fu_1373_p2;
wire   [9:0] select_ln303_22_fu_1396_p3;
wire   [9:0] add_ln303_47_fu_1403_p2;
wire   [9:0] add_ln303_23_fu_1414_p2;
wire   [9:0] select_ln303_23_fu_1425_p3;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
end

decompressf_unr1d #(
    .DataWidth( 32 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
unr1d_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(unr1d_address0),
    .ce0(unr1d_ce0),
    .we0(unr1d_we0),
    .d0(c_load_1_reg_1460),
    .q0(unr1d_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln286_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        h_0_reg_534 <= h_fu_689_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_534 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln283_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_578 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_0_reg_578 <= i_reg_1491;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln286_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_0_reg_522 <= j_reg_1465;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_522 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln286_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        j_1_reg_546 <= add_ln291_fu_683_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_546 <= j_0_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln286_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        k_0_reg_556 <= k_fu_672_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        k_0_reg_556 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln283_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul1_reg_601 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        phi_mul1_reg_601 <= add_ln303_50_reg_1654;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln283_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_589 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        phi_mul_reg_589 <= add_ln303_49_reg_1649;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln283_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        x_0_reg_567 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        x_0_reg_567 <= x_reg_1529;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln303_48_reg_1664 <= add_ln303_48_fu_1432_p2;
        add_ln303_49_reg_1649 <= add_ln303_49_fu_1384_p2;
        add_ln303_50_reg_1654 <= add_ln303_50_fu_1390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_load_1_reg_1460 <= c_q1;
        c_load_reg_1455 <= c_q0;
        j_reg_1465 <= j_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_1491 <= i_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln298_fu_695_p2 == 1'd0))) begin
        icmp_ln303_reg_1496 <= icmp_ln303_fu_707_p2;
        x_reg_1529 <= x_fu_718_p2;
    end
end

always @ (*) begin
    if (((icmp_ln298_fu_695_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln298_fu_695_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        c_ce0 = 1'b1;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        c_ce1 = 1'b1;
    end else begin
        c_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        dc_address0 = zext_ln303_49_fu_1438_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dc_address0 = zext_ln303_48_fu_1409_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        dc_address0 = zext_ln303_47_fu_1368_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dc_address0 = zext_ln303_46_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dc_address0 = zext_ln303_45_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        dc_address0 = zext_ln303_44_fu_1281_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        dc_address0 = zext_ln303_43_fu_1252_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        dc_address0 = zext_ln303_42_fu_1223_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dc_address0 = zext_ln303_41_fu_1194_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        dc_address0 = zext_ln303_40_fu_1165_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dc_address0 = zext_ln303_39_fu_1136_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dc_address0 = zext_ln303_38_fu_1107_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dc_address0 = zext_ln303_fu_1078_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dc_address0 = zext_ln303_37_fu_1056_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dc_address0 = zext_ln303_36_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dc_address0 = zext_ln303_35_fu_998_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dc_address0 = zext_ln303_34_fu_969_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dc_address0 = zext_ln303_33_fu_940_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dc_address0 = zext_ln303_32_fu_911_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dc_address0 = zext_ln303_31_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        dc_address0 = zext_ln303_30_fu_853_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dc_address0 = zext_ln303_29_fu_824_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dc_address0 = zext_ln303_28_fu_795_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dc_address0 = zext_ln303_27_fu_766_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dc_address0 = zext_ln303_26_fu_737_p1;
    end else begin
        dc_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        dc_ce0 = 1'b1;
    end else begin
        dc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        dc_we0 = 1'b1;
    end else begin
        dc_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        unr1d_address0 = zext_ln303_25_fu_1420_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        unr1d_address0 = zext_ln303_24_fu_1379_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        unr1d_address0 = zext_ln303_23_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        unr1d_address0 = zext_ln303_22_fu_1321_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        unr1d_address0 = zext_ln303_21_fu_1292_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        unr1d_address0 = zext_ln303_20_fu_1263_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        unr1d_address0 = zext_ln303_19_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        unr1d_address0 = zext_ln303_18_fu_1205_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        unr1d_address0 = zext_ln303_17_fu_1176_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        unr1d_address0 = zext_ln303_16_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        unr1d_address0 = zext_ln303_15_fu_1118_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        unr1d_address0 = zext_ln303_14_fu_1089_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        unr1d_address0 = zext_ln303_13_fu_1067_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        unr1d_address0 = zext_ln303_12_fu_1038_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        unr1d_address0 = zext_ln303_11_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        unr1d_address0 = zext_ln303_10_fu_980_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        unr1d_address0 = zext_ln303_9_fu_951_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        unr1d_address0 = zext_ln303_8_fu_922_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        unr1d_address0 = zext_ln303_7_fu_893_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        unr1d_address0 = zext_ln303_6_fu_864_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        unr1d_address0 = zext_ln303_5_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        unr1d_address0 = zext_ln303_4_fu_806_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        unr1d_address0 = zext_ln303_3_fu_777_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        unr1d_address0 = zext_ln303_2_fu_748_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        unr1d_address0 = zext_ln303_1_fu_713_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        unr1d_address0 = sext_ln289_1_fu_678_p1;
    end else begin
        unr1d_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        unr1d_ce0 = 1'b1;
    end else begin
        unr1d_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln286_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        unr1d_we0 = 1'b1;
    end else begin
        unr1d_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln283_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln286_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln298_fu_695_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln291_fu_683_p2 = ($signed(j_1_reg_546) + $signed(32'd1));

assign add_ln303_10_fu_1032_p2 = (phi_mul_reg_589 + 10'd11);

assign add_ln303_11_fu_1061_p2 = (phi_mul_reg_589 + 10'd12);

assign add_ln303_12_fu_1083_p2 = (phi_mul_reg_589 + 10'd13);

assign add_ln303_13_fu_1112_p2 = (phi_mul_reg_589 + 10'd14);

assign add_ln303_14_fu_1141_p2 = (phi_mul_reg_589 + 10'd15);

assign add_ln303_15_fu_1170_p2 = (phi_mul_reg_589 + 10'd16);

assign add_ln303_16_fu_1199_p2 = (phi_mul_reg_589 + 10'd17);

assign add_ln303_17_fu_1228_p2 = (phi_mul_reg_589 + 10'd18);

assign add_ln303_18_fu_1257_p2 = (phi_mul_reg_589 + 10'd19);

assign add_ln303_19_fu_1286_p2 = (phi_mul_reg_589 + 10'd20);

assign add_ln303_1_fu_771_p2 = (phi_mul_reg_589 + 10'd2);

assign add_ln303_20_fu_1315_p2 = (phi_mul_reg_589 + 10'd21);

assign add_ln303_21_fu_1344_p2 = (phi_mul_reg_589 + 10'd22);

assign add_ln303_22_fu_1373_p2 = (phi_mul_reg_589 + 10'd23);

assign add_ln303_23_fu_1414_p2 = (phi_mul_reg_589 + 10'd24);

assign add_ln303_24_fu_1072_p2 = (phi_mul1_reg_601 + 10'd12);

assign add_ln303_25_fu_731_p2 = (phi_mul1_reg_601 + select_ln303_fu_724_p3);

assign add_ln303_26_fu_760_p2 = (phi_mul1_reg_601 + select_ln303_1_fu_753_p3);

assign add_ln303_27_fu_789_p2 = (phi_mul1_reg_601 + select_ln303_2_fu_782_p3);

assign add_ln303_28_fu_818_p2 = (phi_mul1_reg_601 + select_ln303_3_fu_811_p3);

assign add_ln303_29_fu_847_p2 = (phi_mul1_reg_601 + select_ln303_4_fu_840_p3);

assign add_ln303_2_fu_800_p2 = (phi_mul_reg_589 + 10'd3);

assign add_ln303_30_fu_876_p2 = (phi_mul1_reg_601 + select_ln303_5_fu_869_p3);

assign add_ln303_31_fu_905_p2 = (phi_mul1_reg_601 + select_ln303_6_fu_898_p3);

assign add_ln303_32_fu_934_p2 = (phi_mul1_reg_601 + select_ln303_7_fu_927_p3);

assign add_ln303_33_fu_963_p2 = (phi_mul1_reg_601 + select_ln303_8_fu_956_p3);

assign add_ln303_34_fu_992_p2 = (phi_mul1_reg_601 + select_ln303_9_fu_985_p3);

assign add_ln303_35_fu_1021_p2 = (phi_mul1_reg_601 + select_ln303_10_fu_1014_p3);

assign add_ln303_36_fu_1050_p2 = (phi_mul1_reg_601 + select_ln303_11_fu_1043_p3);

assign add_ln303_37_fu_1101_p2 = (phi_mul1_reg_601 + select_ln303_12_fu_1094_p3);

assign add_ln303_38_fu_1130_p2 = (phi_mul1_reg_601 + select_ln303_13_fu_1123_p3);

assign add_ln303_39_fu_1159_p2 = (phi_mul1_reg_601 + select_ln303_14_fu_1152_p3);

assign add_ln303_3_fu_829_p2 = (phi_mul_reg_589 + 10'd4);

assign add_ln303_40_fu_1188_p2 = (phi_mul1_reg_601 + select_ln303_15_fu_1181_p3);

assign add_ln303_41_fu_1217_p2 = (phi_mul1_reg_601 + select_ln303_16_fu_1210_p3);

assign add_ln303_42_fu_1246_p2 = (phi_mul1_reg_601 + select_ln303_17_fu_1239_p3);

assign add_ln303_43_fu_1275_p2 = (phi_mul1_reg_601 + select_ln303_18_fu_1268_p3);

assign add_ln303_44_fu_1304_p2 = (phi_mul1_reg_601 + select_ln303_19_fu_1297_p3);

assign add_ln303_45_fu_1333_p2 = (phi_mul1_reg_601 + select_ln303_20_fu_1326_p3);

assign add_ln303_46_fu_1362_p2 = (phi_mul1_reg_601 + select_ln303_21_fu_1355_p3);

assign add_ln303_47_fu_1403_p2 = (phi_mul1_reg_601 + select_ln303_22_fu_1396_p3);

assign add_ln303_48_fu_1432_p2 = (phi_mul1_reg_601 + select_ln303_23_fu_1425_p3);

assign add_ln303_49_fu_1384_p2 = (phi_mul_reg_589 + 10'd25);

assign add_ln303_4_fu_858_p2 = (phi_mul_reg_589 + 10'd5);

assign add_ln303_50_fu_1390_p2 = (phi_mul1_reg_601 + 10'd25);

assign add_ln303_5_fu_887_p2 = (phi_mul_reg_589 + 10'd6);

assign add_ln303_6_fu_916_p2 = (phi_mul_reg_589 + 10'd7);

assign add_ln303_7_fu_945_p2 = (phi_mul_reg_589 + 10'd8);

assign add_ln303_8_fu_974_p2 = (phi_mul_reg_589 + 10'd9);

assign add_ln303_9_fu_1003_p2 = (phi_mul_reg_589 + 10'd10);

assign add_ln303_fu_742_p2 = (phi_mul_reg_589 + 10'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign c_address0 = sext_ln286_fu_625_p1;

assign c_address1 = sext_ln289_fu_630_p1;

assign dc_d0 = unr1d_q0;

assign empty_fu_639_p2 = (($signed(c_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign h_fu_689_p2 = ($signed(h_0_reg_534) + $signed(32'd2));

assign i_fu_701_p2 = (i_0_reg_578 + 5'd1);

assign icmp_ln283_fu_613_p2 = (($signed(j_0_reg_522) < $signed(32'd625)) ? 1'b1 : 1'b0);

assign icmp_ln286_fu_667_p2 = (($signed(zext_ln286_fu_663_p1) < $signed(c_load_reg_1455)) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_695_p2 = ((i_0_reg_578 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_707_p2 = ((x_0_reg_567 == 32'd0) ? 1'b1 : 1'b0);

assign j_fu_657_p2 = (smax_cast_fu_653_p1 + j_0_reg_522);

assign k_fu_672_p2 = (k_0_reg_556 + 31'd1);

assign or_ln286_fu_619_p2 = (h_0_reg_534 | 32'd1);

assign select_ln303_10_fu_1014_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd10 : 10'd14);

assign select_ln303_11_fu_1043_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd11 : 10'd13);

assign select_ln303_12_fu_1094_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd13 : 10'd11);

assign select_ln303_13_fu_1123_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd14 : 10'd10);

assign select_ln303_14_fu_1152_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd15 : 10'd9);

assign select_ln303_15_fu_1181_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd16 : 10'd8);

assign select_ln303_16_fu_1210_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd17 : 10'd7);

assign select_ln303_17_fu_1239_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd18 : 10'd6);

assign select_ln303_18_fu_1268_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd19 : 10'd5);

assign select_ln303_19_fu_1297_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd20 : 10'd4);

assign select_ln303_1_fu_753_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd1 : 10'd23);

assign select_ln303_20_fu_1326_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd21 : 10'd3);

assign select_ln303_21_fu_1355_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd22 : 10'd2);

assign select_ln303_22_fu_1396_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd23 : 10'd1);

assign select_ln303_23_fu_1425_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd24 : 10'd0);

assign select_ln303_2_fu_782_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd2 : 10'd22);

assign select_ln303_3_fu_811_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd3 : 10'd21);

assign select_ln303_4_fu_840_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd4 : 10'd20);

assign select_ln303_5_fu_869_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd5 : 10'd19);

assign select_ln303_6_fu_898_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd6 : 10'd18);

assign select_ln303_7_fu_927_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd7 : 10'd17);

assign select_ln303_8_fu_956_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd8 : 10'd16);

assign select_ln303_9_fu_985_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd9 : 10'd15);

assign select_ln303_fu_724_p3 = ((icmp_ln303_reg_1496[0:0] === 1'b1) ? 10'd0 : 10'd24);

assign sext_ln286_fu_625_p1 = $signed(or_ln286_fu_619_p2);

assign sext_ln289_1_fu_678_p1 = j_1_reg_546;

assign sext_ln289_fu_630_p1 = h_0_reg_534;

assign smax_cast_fu_653_p1 = smax_fu_645_p3;

assign smax_fu_645_p3 = ((empty_fu_639_p2[0:0] === 1'b1) ? trunc_ln289_fu_635_p1 : 31'd0);

assign trunc_ln289_fu_635_p1 = c_q0[30:0];

assign x_fu_718_p2 = (x_0_reg_567 ^ 32'd1);

assign zext_ln286_fu_663_p1 = k_0_reg_556;

assign zext_ln303_10_fu_980_p1 = add_ln303_8_fu_974_p2;

assign zext_ln303_11_fu_1009_p1 = add_ln303_9_fu_1003_p2;

assign zext_ln303_12_fu_1038_p1 = add_ln303_10_fu_1032_p2;

assign zext_ln303_13_fu_1067_p1 = add_ln303_11_fu_1061_p2;

assign zext_ln303_14_fu_1089_p1 = add_ln303_12_fu_1083_p2;

assign zext_ln303_15_fu_1118_p1 = add_ln303_13_fu_1112_p2;

assign zext_ln303_16_fu_1147_p1 = add_ln303_14_fu_1141_p2;

assign zext_ln303_17_fu_1176_p1 = add_ln303_15_fu_1170_p2;

assign zext_ln303_18_fu_1205_p1 = add_ln303_16_fu_1199_p2;

assign zext_ln303_19_fu_1234_p1 = add_ln303_17_fu_1228_p2;

assign zext_ln303_1_fu_713_p1 = phi_mul_reg_589;

assign zext_ln303_20_fu_1263_p1 = add_ln303_18_fu_1257_p2;

assign zext_ln303_21_fu_1292_p1 = add_ln303_19_fu_1286_p2;

assign zext_ln303_22_fu_1321_p1 = add_ln303_20_fu_1315_p2;

assign zext_ln303_23_fu_1350_p1 = add_ln303_21_fu_1344_p2;

assign zext_ln303_24_fu_1379_p1 = add_ln303_22_fu_1373_p2;

assign zext_ln303_25_fu_1420_p1 = add_ln303_23_fu_1414_p2;

assign zext_ln303_26_fu_737_p1 = add_ln303_25_fu_731_p2;

assign zext_ln303_27_fu_766_p1 = add_ln303_26_fu_760_p2;

assign zext_ln303_28_fu_795_p1 = add_ln303_27_fu_789_p2;

assign zext_ln303_29_fu_824_p1 = add_ln303_28_fu_818_p2;

assign zext_ln303_2_fu_748_p1 = add_ln303_fu_742_p2;

assign zext_ln303_30_fu_853_p1 = add_ln303_29_fu_847_p2;

assign zext_ln303_31_fu_882_p1 = add_ln303_30_fu_876_p2;

assign zext_ln303_32_fu_911_p1 = add_ln303_31_fu_905_p2;

assign zext_ln303_33_fu_940_p1 = add_ln303_32_fu_934_p2;

assign zext_ln303_34_fu_969_p1 = add_ln303_33_fu_963_p2;

assign zext_ln303_35_fu_998_p1 = add_ln303_34_fu_992_p2;

assign zext_ln303_36_fu_1027_p1 = add_ln303_35_fu_1021_p2;

assign zext_ln303_37_fu_1056_p1 = add_ln303_36_fu_1050_p2;

assign zext_ln303_38_fu_1107_p1 = add_ln303_37_fu_1101_p2;

assign zext_ln303_39_fu_1136_p1 = add_ln303_38_fu_1130_p2;

assign zext_ln303_3_fu_777_p1 = add_ln303_1_fu_771_p2;

assign zext_ln303_40_fu_1165_p1 = add_ln303_39_fu_1159_p2;

assign zext_ln303_41_fu_1194_p1 = add_ln303_40_fu_1188_p2;

assign zext_ln303_42_fu_1223_p1 = add_ln303_41_fu_1217_p2;

assign zext_ln303_43_fu_1252_p1 = add_ln303_42_fu_1246_p2;

assign zext_ln303_44_fu_1281_p1 = add_ln303_43_fu_1275_p2;

assign zext_ln303_45_fu_1310_p1 = add_ln303_44_fu_1304_p2;

assign zext_ln303_46_fu_1339_p1 = add_ln303_45_fu_1333_p2;

assign zext_ln303_47_fu_1368_p1 = add_ln303_46_fu_1362_p2;

assign zext_ln303_48_fu_1409_p1 = add_ln303_47_fu_1403_p2;

assign zext_ln303_49_fu_1438_p1 = add_ln303_48_reg_1664;

assign zext_ln303_4_fu_806_p1 = add_ln303_2_fu_800_p2;

assign zext_ln303_5_fu_835_p1 = add_ln303_3_fu_829_p2;

assign zext_ln303_6_fu_864_p1 = add_ln303_4_fu_858_p2;

assign zext_ln303_7_fu_893_p1 = add_ln303_5_fu_887_p2;

assign zext_ln303_8_fu_922_p1 = add_ln303_6_fu_916_p2;

assign zext_ln303_9_fu_951_p1 = add_ln303_7_fu_945_p2;

assign zext_ln303_fu_1078_p1 = add_ln303_24_fu_1072_p2;

endmodule //decompressf
